buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "2.1"
group = "zone.rong.loliasm" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "loliasm"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
	version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "stable_39"
    def args = [
            '-Dfml.coreMods.load=zone.rong.loliasm.core.LoliLoadingPlugin',
            '-Dmixin.hotSwap=true',
            '-Dmixin.checks.interfaces=true',
			'-Dmixin.debug.export=true'
    ]
    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)
    useDepAts = true
    makeObfSourceJar = false
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {

    jcenter()

    maven {
        url "https://repo.spongepowered.org/maven"
    }

}

dependencies {

    embed 'me.nallar.whocalled:WhoCalled:1.1'

    // implementation ("org.spongepowered:mixin:0.8.3-SNAPSHOT") {
    embed ("org.spongepowered:mixin:0.8") {
        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io"
    }

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
    main {
        ext.refMap = "mixins.loliasm.refmap.json"
    }
}

jar {
    from (configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'LICENSE.txt', 'META-INF/MANIFSET.MF', 'META-INF/maven/**', 'META-INF/*.RSA', 'META-INF/*.SF'
    }
    manifest {
        attributes([
                "FMLCorePluginContainsFMLMod": true,
                "FMLCorePlugin": 'zone.rong.loliasm.core.LoliLoadingPlugin',
                "ForceLoadAsMod": true,
                "TweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
                "FMLAT": "loliasm_at.cfg"
        ])
    }
}
